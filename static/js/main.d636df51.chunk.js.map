{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Button","props","className","onClick","select_country","con","get_news","Menu","json","map","indexOf","Headline","headline","Listings","country","news","App","useState","setCountry","setNews","c","j","fetch","then","response","i","length","push","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wLAKC,SAASA,EAAOC,GAMhB,OACC,wBAAQC,UAAY,iBAAiBC,QANrC,WACCF,EAAMG,eAAeH,EAAMI,KAC3BJ,EAAMK,SAASL,EAAMI,MAItB,SACCJ,EAAMI,MAKT,SAASE,EAAKN,GACd,OACC,mCACCA,EAAMO,KAAKC,KAAI,SAAAJ,GAAG,OAAI,cAACL,EAAD,CACtBK,IAAKA,EACLD,eAAkBH,EAAMG,eACxBE,SAAYL,EAAMK,UAFDL,EAAMO,KAAKE,QAAQL,SAUtC,SAASM,EAASV,GACjB,OACC,mBAAGC,UAAY,OAAf,SAAuBD,EAAMW,WAI/B,SAASC,EAASZ,GACjB,MAAqB,IAAjBA,EAAMa,QAER,6BAOD,gCACA,oBAAIZ,UAAY,OAAhB,SAAwB,kBAAoBD,EAAMa,UACjDb,EAAMc,KAAKN,KAAI,SAAAG,GAAQ,OAAE,cAACD,EAAD,CAAUC,SAAYA,GAAiBX,EAAMc,KAAKL,QAAQE,UAsCvEI,MA/Bf,SAAaf,GACZ,MAA8BgB,mBAAS,IAAvC,mBAAOH,EAAP,KAAgBI,EAAhB,KAKA,EAAwBD,mBAAS,IAAjC,mBAAOF,EAAP,KAAaI,EAAb,KAcA,OACI,gCACC,oBAAIjB,UAAW,UAAf,wBACE,cAACK,EAAD,CAAMC,KAAQP,EAAMO,KAAMJ,eArBV,SAACgB,GACvBF,EAAWE,IAoBuDd,SAhBlD,SAACD,GACjB,IAAIgB,EAAI,GAERC,MADU,sCAAsCjB,GAE/CkB,MAAK,SAAAC,GAAQ,OAAIA,EAAShB,UAC1Be,MAAK,SAACf,GACN,IAAI,IAAIiB,EAAI,EAAGA,EAAEjB,EAAKkB,OAAQD,IAC9BJ,EAAEM,KAAKnB,EAAKiB,IAEbN,EAAQE,SAQF,cAACR,EAAD,CAAUE,KAAQA,EAAMD,QAAWA,QCrE5Bc,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBP,MAAK,YAAkD,IAA/CQ,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCQdP,MAAM,iCACHC,MAAK,SAAAC,GAAQ,OAAIA,EAAShB,UAC1Be,MAAK,SAAAf,GAAI,OAXZ,SAAgBA,GACf4B,IAASC,OACR,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,CAAK9B,KAAMA,MAEb+B,SAASC,eAAe,SAMVH,CAAO7B,MAKvBoB,K","file":"static/js/main.d636df51.chunk.js","sourcesContent":["import React, { useState }from 'react';\nimport './App.css';\n// import Menu from \"./button.js\"\n\n\n function Button(props) {\n \tfunction handleClick() {\n \t\tprops.select_country(props.con);\n \t\tprops.get_news(props.con);\n \t}\n\n\treturn (\n\t\t<button className = 'button button2' onClick={handleClick}>\n\t\t{props.con}\n\t\t</button>\n\t\t);\t\n}\n\nfunction Menu(props){\nreturn (\n\t<>\n\t{props.json.map(con => <Button \n\t\tcon={con} key = {props.json.indexOf(con)} \n\t\tselect_country = {props.select_country}\n\t\tget_news = {props.get_news}\n\t\t/>)}\n\t</>\n\t);\n\n}\n\n\nfunction Headline(props){\n\treturn (\n\t\t<p className = 'news'>{props.headline}</p>\n\t\t)\t\n}\n\nfunction Listings(props){\n\tif (props.country == \"\") {\n\t\treturn(\n\t\t\t<>\n\t\t\t</>\n\t\t\t)\n\t}\n\telse\n\t{\n\t\treturn(\n\t\t<div >\n\t\t<h3 className = 'news'>{\"Some news from \" + props.country}</h3>\n\t\t{props.news.map(headline=><Headline headline = {headline} key = {props.news.indexOf(headline)}/>)}\n\t\t</div>\n\t\t)\n\t}\n}\n\n\nfunction App(props) {\n\tconst [country, setCountry] = useState(\"\");\n\tconst select_country = (c) =>{ \n\t\tsetCountry(c);\n\t};\n\n\tconst [news, setNews] = useState([]);\n\tconst get_news = (con) => {\n\t\tlet j = [];\n\t\tvar url = 'http://40.80.150.149:5000/listings/'+con;\n\t\tfetch(url)\n\t\t.then(response => response.json())\n\t\t.then((json)=>{\n\t\t\tfor(var i = 0; i<json.length; i++){\n\t\t\tj.push(json[i]);\n\t\t\t}\n\t\tsetNews(j);\n\t\t});\n\t};\n\n\treturn (\n    \t<div>\n    \t\t<h2 className= 'heading'>N  E  W  S</h2>\n      \t\t<Menu json = {props.json} select_country = {select_country} get_news = {get_news}/>\n      \t\t<Listings news = {news} country = {country}/>\n    \t</div>\t\n\n  );\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nfunction render(json){\n\tReactDOM.render(\n  <React.StrictMode>\n    <App json={json}/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n}\n\nfetch('http://40.80.150.149:5000/con')\n  .then(response => response.json())\n  .then(json => render(json));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}